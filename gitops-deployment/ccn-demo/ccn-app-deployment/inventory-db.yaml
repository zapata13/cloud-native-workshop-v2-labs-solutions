---
apiVersion: v1
kind: Secret
metadata:
  name: inventory-database
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
type: Opaque 
stringData: 
  database-name: inventory
  database-password: mysecretpassword
  database-user: inventory

---
apiVersion: v1
kind: Service
metadata:
  name: inventory-database
  labels:
    app: inventory-database
    app.kubernetes.io/component: inventory-database
    app.kubernetes.io/instance: inventory-database
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  selector:
    name: inventory-database
    deploymentconfig: inventory-database
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: 5432-tcp
    protocol: TCP
    port: 5432
    targetPort: 5432 
    nodePort: 0

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: inventory-database
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: inventory-database
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/part-of: inventory
    app.openshift.io/runtime: postgresql
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:10-el8'
    - type: ConfigChange
  replicas: 1
  template:
    metadata:
      labels:
        name: inventory-database
    spec:
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: inventory-database
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: inventory-database
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: inventory-database
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: inventory-database
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/pgsql/data
